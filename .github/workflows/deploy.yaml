name: Deploy to EC2

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 실행

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PAgSSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/ybigta-api:latest .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ybigta-api:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

            docker stop ybigta-api-container || true
            docker rm ybigta-api-container || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/ybigta-api:latest

            if [ ! -f .env ]; then
              echo "DB_USER=${{ secrets.DB_USER }}" >> .env
              echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
              echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
              echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
              echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
              echo "MONGO_URL=${{ secrets.MONGO_URL }}" >> .env
            fi

            docker run -d --name ybigta-api-container -p 8080:5000 --env-file .env \
              ${{ secrets.DOCKER_USERNAME }}/ybigta-api:latest